
# Create GitHub Action Repository Variables for your version of the application:
#   FOD_BASE_URL should be FoD BASE URL for your tenant (e.g. https://ams.fortify.com)
#   FOD_API_URL should be FoD API URL for your tenant (e.g. https://api.ams,fortify.com)
#   FOD_PARENT_RELEASE_NAME is the FoD release name corresponding to the parent branch of any newly created branch, this is typically "main" or "develop"
# Create GitHub Action Secrets for your version of the application:
#   FOD_CLIENT_ID should be an API Key obtained from your FoD tenant.
#   FOD_CLIENT_SECRET should be the secret for the API Key obtained for your FoD tenant.
# Helpful hints:
#   API Key credentials can be obtained from your FoD tenant, under Administration -> Settings -> API
#   It is recommended to create credentials with 'Security Lead' Role selected.
#   "Automated Audit preference" should be configured for the release's Static Scan Settings.

name: DevSecOps with Fortify on Demand

on:
  # Triggers the workflow on push or pull request events but only for the main or develop branches
  push:
    paths-ignore:
      - '.github/**/**'
      - 'bin/**'
      - 'data/**'
      - 'etc/**'
      - 'tests/**'
      - 'README.md'
      - 'LICENSE'
    branches:
      - '**'        # matches every branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runFoDSASTScan:
        description: 'Carry out SAST scan using Fortify on Demand'
        required: false
        default: 'true'
      runFoDDASTScan:
        description: 'Carry out DAST scan using Fortify on Demand'
        required: false
        default: 'false'
      deployApp:
        description: 'Deploy App'
        required: false
        default: 'true'        

# Global environment variables
env:
  DEFAULT_APP_NAME: "EG_IWA_NET"
  DEFAULT_VERSION_NAME: "master"

jobs:

  Build-And-Unit-Test:
    # The type of runner that the job will run on
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      
      # Build / Test with MS  Build
      - name: Build with MSBuild
        run: dotnet build 
        
  Quality-Gate:
    runs-on: windows-latest
    if: ${{ always() }}
    needs: [ Build-And-Unit-Test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2

    # TBD

  FoD-SAST-Scan:
    runs-on: windows-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runFoDSASTScan == 'true') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: edguerreros/github-actions/fortify-app-and-release-name@main
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ env.DEFAULT_VERSION_NAME }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}
      # Uncomment below to debug FoD App/Release names   
      - name: Print App and Release Name
        shell: bash
        run: |
          echo "FoD App Name: ${FOD_APP_NAME}"
          echo "FoD Release Name: ${FOD_RELEASE_NAME}"
        env:
          FOD_APP_NAME: ${{ steps.fortify-app-and-rel-name.outputs.app_name }}
          FOD_RELEASE_NAME: ${{ steps.fortify-app-and-rel-name.outputs.release_name }}          
      # Login to Fortify on Demand fcli session
      - name: Login fcli
        working-directory: ${{ env.BASE_DIR }}
        shell: bash
        run: |
          fcli fod session login --url $FOD_API_URI --client-id $FOD_CLIENT_ID --client-secret $FOD_CLIENT_SECRET --session github-actions
        env:
          FOD_API_URI: ${{ inputs.fod_api_url }}
          FOD_CLIENT_ID: ${{ inputs.fod_client_id }}
          FOD_CLIENT_SECRET: ${{ inputs.fod_client_secret }}
      # Create a new Fortify on Demand release for GitHub branch
      - name: Create FoD release
        id: create-release
        working-directory: ${{ env.BASE_DIR }}
        shell: bash
        run: |
          fcli fod release list --app "$FOD_APP_NAME" --session github-actions
          echo fcli fod release create "${FOD_APP_NAME}:${FOD_RELEASE_NAME}" --description "Created automatically from GitHub" --copy-from "${FOD_APP_NAME}:${FOD_PARENT_RELEASE_NAME}" --status Development --skip-if-exists -o expr="{releaseId}" --session github-actions
          RELID=$(fcli fod release create "${FOD_APP_NAME}:${FOD_RELEASE_NAME}" --description "Created automatically from GitHub" --copy-from "${FOD_APP_NAME}:${FOD_PARENT_RELEASE_NAME}" --status Development --skip-if-exists -o expr="{releaseId}" --session github-actions)
          echo "::debug::Created/Using fod_release_id=${RELID}"
          echo "release_id=${RELID}" >> $GITHUB_OUTPUT
        env:
          FOD_APP_NAME: ${{ inputs.fod_app_name }}
          FOD_RELEASE_NAME: ${{ inputs.fod_release_name }}
          FOD_PARENT_RELEASE_NAME: ${{ inputs.fod_parent_release_name }}
      - name: Package Code + Dependencies
        uses: edguerreros/github-action/package@main
        env:
          EXTRA_PACKAGE_OPTS: -bf "${BUILD_FILE}" -oss
          PACKAGE_FILE: "package"
          # Cambiar por el nombre correcto de la soluciÃ³n
          BUILD_FILE: "IWA.NET.sln"
      # Start Fortify on Demand SAST scan and wait until results complete.
      - name: Perform FoD SAST scan
        id: fod-sast-scan
        working-directory: ${{ env.BASE_DIR }}
        shell: bash
        run: |
          fcli fod sast-scan start --release "${FOD_RELEASE_NAME}" --notes "${FOD_SCAN_NOTES}" -f $PACKAGE_FILE --store curScan --session github-actions
          echo "fod_scan_id=$(fcli util var contents curScan -o 'expr={scanId}')" >> $GITHUB_OUTPUT
          sleep 10
          fcli fod sast-scan wait-for ::curScan:: --session github-actions
        env:
          PACKAGE_FILE: "package.zip"
          FOD_RELEASE_NAME: ${{ format('{0}:{1}', inputs.fod_app_name, inputs.fod_release_name) }}
          FOD_SCAN_NOTES: "Triggered by GitHub Actions (${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
      # Export FoD vulnerability data to GitHub
      - name: Export FoD vulnerability data to GitHub
        uses: edguerreros/github-action/fod-export@main
        env:
          FOD_URL: ${{ inputs.fod_url }}
          FOD_TENANT: "FranklinBank24"
          FOD_CLIENT_SECRET: ${{ inputs.fod_client_secret }}
          FOD_CLIENT_ID: ${{ inputs.fod_client_id }}
          FOD_RELEASE: ${{ format('{0}:{1}', inputs.fod_app_name, inputs.fod_release_name) }}
      # Logout/Close Fortify on Demand fcli session
      - name: Logout fcli
        shell: bash
        run: |
          fcli fod session logout --session github-actions

  Deploy-App:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.deployApp == 'true') }}
    needs: [ Build-And-Unit-Test, FoD-SAST-Scan ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Deploy App
        shell: bash
        run: |
          echo "Simulating deployment"
        env:
          FOD_APP_NAME: ${{ env.DEFAULT_APP_NAME }}
      # TBD 

  Functional-Test:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ Deploy-App ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
    # TBD

  FoD-DAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runFoDDASTScan == 'true') }}
    needs: [ Deploy-App ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: edguerreros/github-actions/fortify-app-and-release-name@main
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ github.ref_name }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}
      - name: FoD DAST scan
        id: fod-dast-scan
        uses: edguerreros/github-actions/fod-dast-scan@main
        with:
          working_directory: ${{ env.BASE_DIR }}
          fod_api_url: ${{ vars.FOD_API_URL }}
          fod_client_id: ${{ secrets.FOD_CLIENT_ID }}
          fod_client_secret: ${{ secrets.FOD_CLIENT_SECRET }}
          fod_app_name: ${{ steps.fortify-app-and-rel-name.outputs.app_name }}
          # For DAST we are choosing to create a new release each time using GitHub Run Number
          #fod_release_name: ${{ steps.fortify-app-and-rel-name.outputs.release_name }}
          fod_release_name: ${{ format('{0}#{1}', steps.fortify-app-and-rel-name.outputs.release_name, github.run_number) }}
          #fod_parent_release_name: ${{ steps.fortify-app-and-rel-name.outputs.parent_release_name }}
          fod_parent_release_name: "dast-web-base"

  Security-Gate:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ Functional-Test, FoD-DAST-Scan ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: edguerreros/github-actions/fortify-app-and-release-name@main
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ env.DEFAULT_VERSION_NAME }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}
      - name: Verify FoD Security Policy
        uses: edguerreros/github-actions/verify-fod-security-policy@main
        with:
          fod_api_url: ${{ vars.FOD_API_URL }}
          fod_client_id: ${{ secrets.FOD_CLIENT_ID }}
          fod_client_secret: ${{ secrets.FOD_CLIENT_SECRET }}
          fod_app_name: ${{ steps.fortify-app-and-rel-name.outputs.app_name }}
          fod_release_name: ${{ steps.fortify-app-and-rel-name.outputs.release_name }}

  Release-To-Prod:
    runs-on: ubuntu-latest
    needs: [ Quality-Gate, Security-Gate ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
    # TBD
